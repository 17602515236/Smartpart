ARM GAS  /tmp/cchptC2H.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"freertos.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.StartDefaultTask,"ax",%progbits
  20              		.align	2
  21              		.global	StartDefaultTask
  22              		.thumb
  23              		.thumb_func
  25              	StartDefaultTask:
  26              	.LFB70:
  27              		.file 1 "Src/freertos.c"
   1:Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Src/freertos.c **** /**
   3:Src/freertos.c ****   ******************************************************************************
   4:Src/freertos.c ****   * File Name          : freertos.c
   5:Src/freertos.c ****   * Description        : Code for freertos applications
   6:Src/freertos.c ****   ******************************************************************************
   7:Src/freertos.c ****   * @attention
   8:Src/freertos.c ****   *
   9:Src/freertos.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/freertos.c ****   * All rights reserved.</center></h2>
  11:Src/freertos.c ****   *
  12:Src/freertos.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Src/freertos.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/freertos.c ****   * the License. You may obtain a copy of the License at:
  15:Src/freertos.c ****   *                             www.st.com/SLA0044
  16:Src/freertos.c ****   *
  17:Src/freertos.c ****   ******************************************************************************
  18:Src/freertos.c ****   */
  19:Src/freertos.c **** /* USER CODE END Header */
  20:Src/freertos.c **** 
  21:Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/freertos.c **** #include "FreeRTOS.h"
  23:Src/freertos.c **** #include "task.h"
  24:Src/freertos.c **** #include "main.h"
  25:Src/freertos.c **** #include "cmsis_os.h"
  26:Src/freertos.c **** 
  27:Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  28:Src/freertos.c **** /* USER CODE BEGIN Includes */     
  29:Src/freertos.c **** #include "SmartPart.h"
  30:Src/freertos.c **** /* USER CODE END Includes */
  31:Src/freertos.c **** 
ARM GAS  /tmp/cchptC2H.s 			page 2


  32:Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  33:Src/freertos.c **** /* USER CODE BEGIN PTD */
  34:Src/freertos.c **** 
  35:Src/freertos.c **** /* USER CODE END PTD */
  36:Src/freertos.c **** 
  37:Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  38:Src/freertos.c **** /* USER CODE BEGIN PD */
  39:Src/freertos.c **** 
  40:Src/freertos.c **** /* USER CODE END PD */
  41:Src/freertos.c **** 
  42:Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  43:Src/freertos.c **** /* USER CODE BEGIN PM */
  44:Src/freertos.c **** 
  45:Src/freertos.c **** /* USER CODE END PM */
  46:Src/freertos.c **** 
  47:Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  48:Src/freertos.c **** /* USER CODE BEGIN Variables */
  49:Src/freertos.c **** 
  50:Src/freertos.c **** /* USER CODE END Variables */
  51:Src/freertos.c **** osThreadId defaultTaskHandle;
  52:Src/freertos.c **** 
  53:Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  54:Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  55:Src/freertos.c ****    
  56:Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  57:Src/freertos.c **** 
  58:Src/freertos.c **** void StartDefaultTask(void const * argument);
  59:Src/freertos.c **** 
  60:Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
  61:Src/freertos.c **** 
  62:Src/freertos.c **** /**
  63:Src/freertos.c ****   * @brief  FreeRTOS initialization
  64:Src/freertos.c ****   * @param  None
  65:Src/freertos.c ****   * @retval None
  66:Src/freertos.c ****   */
  67:Src/freertos.c **** void MX_FREERTOS_Init(void) {
  68:Src/freertos.c ****   /* USER CODE BEGIN Init */
  69:Src/freertos.c ****        
  70:Src/freertos.c ****   /* USER CODE END Init */
  71:Src/freertos.c **** 
  72:Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
  73:Src/freertos.c ****   /* add mutexes, ... */
  74:Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
  75:Src/freertos.c **** 
  76:Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
  77:Src/freertos.c ****   /* add semaphores, ... */
  78:Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
  79:Src/freertos.c **** 
  80:Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
  81:Src/freertos.c ****   /* start timers, add new ones, ... */
  82:Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
  83:Src/freertos.c **** 
  84:Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
  85:Src/freertos.c ****   /* add queues, ... */
  86:Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
  87:Src/freertos.c **** 
  88:Src/freertos.c ****   /* Create the thread(s) */
ARM GAS  /tmp/cchptC2H.s 			page 3


  89:Src/freertos.c ****   /* definition and creation of defaultTask */
  90:Src/freertos.c ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
  91:Src/freertos.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
  92:Src/freertos.c **** 
  93:Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
  94:Src/freertos.c ****   /* add threads, ... */
  95:Src/freertos.c ****   xTaskCreate(SmartPart_Task,"SmartPart_Task",128,NULL,8,NULL);
  96:Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
  97:Src/freertos.c **** 
  98:Src/freertos.c **** }
  99:Src/freertos.c **** 
 100:Src/freertos.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 101:Src/freertos.c **** /**
 102:Src/freertos.c ****   * @brief  Function implementing the defaultTask thread.
 103:Src/freertos.c ****   * @param  argument: Not used 
 104:Src/freertos.c ****   * @retval None
 105:Src/freertos.c ****   */
 106:Src/freertos.c **** /* USER CODE END Header_StartDefaultTask */
 107:Src/freertos.c **** void StartDefaultTask(void const * argument)
 108:Src/freertos.c **** {
  28              		.loc 1 108 0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              	.LVL0:
  34 0000 08B5     		push	{r3, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 3, -8
  38              		.cfi_offset 14, -4
  39              	.LVL1:
  40              	.L2:
 109:Src/freertos.c **** 
 110:Src/freertos.c ****   /* USER CODE BEGIN StartDefaultTask */
 111:Src/freertos.c ****   /* Infinite loop */
 112:Src/freertos.c ****   for(;;)
 113:Src/freertos.c ****   {
 114:Src/freertos.c ****     osDelay(1);
  41              		.loc 1 114 0 discriminator 1
  42 0002 0120     		movs	r0, #1
  43 0004 FFF7FEFF 		bl	osDelay
  44              	.LVL2:
  45 0008 FBE7     		b	.L2
  46              		.cfi_endproc
  47              	.LFE70:
  49 000a 00BF     		.section	.text.MX_FREERTOS_Init,"ax",%progbits
  50              		.align	2
  51              		.global	MX_FREERTOS_Init
  52              		.thumb
  53              		.thumb_func
  55              	MX_FREERTOS_Init:
  56              	.LFB69:
  67:Src/freertos.c ****   /* USER CODE BEGIN Init */
  57              		.loc 1 67 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 24
ARM GAS  /tmp/cchptC2H.s 			page 4


  60              		@ frame_needed = 0, uses_anonymous_args = 0
  61 0000 30B5     		push	{r4, r5, lr}
  62              	.LCFI1:
  63              		.cfi_def_cfa_offset 12
  64              		.cfi_offset 4, -12
  65              		.cfi_offset 5, -8
  66              		.cfi_offset 14, -4
  67 0002 89B0     		sub	sp, sp, #36
  68              	.LCFI2:
  69              		.cfi_def_cfa_offset 48
  90:Src/freertos.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
  70              		.loc 1 90 0
  71 0004 03AC     		add	r4, sp, #12
  72 0006 0B4D     		ldr	r5, .L6
  73 0008 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
  74 000a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
  75 000c 2B68     		ldr	r3, [r5]
  76 000e 2360     		str	r3, [r4]
  91:Src/freertos.c **** 
  77              		.loc 1 91 0
  78 0010 0021     		movs	r1, #0
  79 0012 03A8     		add	r0, sp, #12
  80 0014 FFF7FEFF 		bl	osThreadCreate
  81              	.LVL3:
  82 0018 074B     		ldr	r3, .L6+4
  83 001a 1860     		str	r0, [r3]
  95:Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
  84              		.loc 1 95 0
  85 001c 0023     		movs	r3, #0
  86 001e 0193     		str	r3, [sp, #4]
  87 0020 0822     		movs	r2, #8
  88 0022 0092     		str	r2, [sp]
  89 0024 8022     		movs	r2, #128
  90 0026 0549     		ldr	r1, .L6+8
  91 0028 0548     		ldr	r0, .L6+12
  92 002a FFF7FEFF 		bl	xTaskCreate
  93              	.LVL4:
  98:Src/freertos.c **** 
  94              		.loc 1 98 0
  95 002e 09B0     		add	sp, sp, #36
  96              	.LCFI3:
  97              		.cfi_def_cfa_offset 12
  98              		@ sp needed
  99 0030 30BD     		pop	{r4, r5, pc}
 100              	.L7:
 101 0032 00BF     		.align	2
 102              	.L6:
 103 0034 00000000 		.word	.LANCHOR0
 104 0038 00000000 		.word	defaultTaskHandle
 105 003c 00000000 		.word	.LC3
 106 0040 00000000 		.word	SmartPart_Task
 107              		.cfi_endproc
 108              	.LFE69:
 110              		.comm	defaultTaskHandle,4,4
 111              		.section	.rodata
 112              		.align	2
 113              		.set	.LANCHOR0,. + 0
ARM GAS  /tmp/cchptC2H.s 			page 5


 114              	.LC2:
 115 0000 10000000 		.word	.LC0
 116 0004 00000000 		.word	StartDefaultTask
 117 0008 0000     		.short	0
 118 000a 0000     		.space	2
 119 000c 00000000 		.word	0
 120 0010 80000000 		.word	128
 121              		.section	.rodata.str1.4,"aMS",%progbits,1
 122              		.align	2
 123              	.LC3:
 124 0000 536D6172 		.ascii	"SmartPart_Task\000"
 124      74506172 
 124      745F5461 
 124      736B00
 125 000f 00       		.space	1
 126              	.LC0:
 127 0010 64656661 		.ascii	"defaultTask\000"
 127      756C7454 
 127      61736B00 
 128              		.text
 129              	.Letext0:
 130              		.file 2 "/opt/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_types.h"
 131              		.file 3 "/opt/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 132              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 133              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 134              		.file 6 "Drivers/CMSIS/Include/core_cm3.h"
ARM GAS  /tmp/cchptC2H.s 			page 6


DEFINED SYMBOLS
                            *ABS*:00000000 freertos.c
     /tmp/cchptC2H.s:20     .text.StartDefaultTask:00000000 $t
     /tmp/cchptC2H.s:25     .text.StartDefaultTask:00000000 StartDefaultTask
     /tmp/cchptC2H.s:50     .text.MX_FREERTOS_Init:00000000 $t
     /tmp/cchptC2H.s:55     .text.MX_FREERTOS_Init:00000000 MX_FREERTOS_Init
     /tmp/cchptC2H.s:103    .text.MX_FREERTOS_Init:00000034 $d
                            *COM*:00000004 defaultTaskHandle
     /tmp/cchptC2H.s:112    .rodata:00000000 $d
     /tmp/cchptC2H.s:122    .rodata.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
osDelay
osThreadCreate
xTaskCreate
SmartPart_Task
